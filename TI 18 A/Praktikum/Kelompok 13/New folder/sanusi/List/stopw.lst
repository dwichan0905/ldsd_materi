
AVRASM ver. 2.1.30  E:\LDSD\New folder\sanusi\List\stopw.asm Tue Jul 09 14:57:20 2019

E:\LDSD\New folder\sanusi\List\stopw.asm(1088): warning: Register r4 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1089): warning: Register r5 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1090): warning: Register r6 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1091): warning: Register r7 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1092): warning: Register r8 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1093): warning: Register r9 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1094): warning: Register r10 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1095): warning: Register r11 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1096): warning: Register r12 already defined by the .DEF directive
E:\LDSD\New folder\sanusi\List\stopw.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _ms1=R4
                 	.DEF _ms1_msb=R5
                 	.DEF _ms2=R6
                 	.DEF _ms2_msb=R7
                 	.DEF _s1=R8
                 	.DEF _s1_msb=R9
                 	.DEF _s2=R10
                 	.DEF _s2_msb=R11
                 	.DEF _m1=R12
                 	.DEF _m1_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0051 	JMP  __RESET
000002 940c 0081 	JMP  _ext_int0_isr
000004 940c 0098 	JMP  _ext_int1_isr
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 7473
000034 706f
000035 0077
000036 6925      	.DB  0x73,0x74,0x6F,0x70,0x77,0x0,0x25,0x69
000037 6925
000038 3a20
000039 2520
00003a 2569      	.DB  0x25,0x69,0x20,0x3A,0x20,0x25,0x69,0x25
00003b 2069
00003c 203a
00003d 6925
00003e 6925      	.DB  0x69,0x20,0x3A,0x20,0x25,0x69,0x25,0x69
00003f 0020      	.DB  0x20,0x0
                 _0x2020060:
E:\LDSD\New folder\sanusi\List\stopw.asm(1140): warning: .cseg .db misalignment - padding zero byte
000040 0001      	.DB  0x1
                 _0x2020000:
000041 4e2d
000042 4e41
000043 4900
000044 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
E:\LDSD\New folder\sanusi\List\stopw.asm(1143): warning: .cseg .db misalignment - padding zero byte
000045 0000      	.DB  0x0
                 _0x2040003:
000046 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000047 0006      	.DW  0x06
000048 0160      	.DW  _0x13
000049 0066      	.DW  _0x0*2
                 
00004a 0001      	.DW  0x01
00004b 017c      	.DW  __seed_G101
00004c 0080      	.DW  _0x2020060*2
                 
00004d 0002      	.DW  0x02
00004e 0180      	.DW  __base_y_G102
00004f 008c      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
000050 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000051 94f8      	CLI
000052 27ee      	CLR  R30
000053 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000054 e0f1      	LDI  R31,1
000055 bffb      	OUT  GICR,R31
000056 bfeb      	OUT  GICR,R30
000057 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000058 e1f8      	LDI  R31,0x18
000059 bdf1      	OUT  WDTCR,R31
00005a bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00005b e08d      	LDI  R24,(14-2)+1
00005c e0a2      	LDI  R26,2
00005d 27bb      	CLR  R27
                 __CLEAR_REG:
00005e 93ed      	ST   X+,R30
00005f 958a      	DEC  R24
000060 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000061 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000062 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000063 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000064 93ed      	ST   X+,R30
000065 9701      	SBIW R24,1
000066 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000067 e8ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000068 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000069 9185      	LPM  R24,Z+
00006a 9195      	LPM  R25,Z+
00006b 9700      	SBIW R24,0
00006c f061      	BREQ __GLOBAL_INI_END
00006d 91a5      	LPM  R26,Z+
00006e 91b5      	LPM  R27,Z+
00006f 9005      	LPM  R0,Z+
000070 9015      	LPM  R1,Z+
000071 01bf      	MOVW R22,R30
000072 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000073 9005      	LPM  R0,Z+
000074 920d      	ST   X+,R0
000075 9701      	SBIW R24,1
000076 f7e1      	BRNE __GLOBAL_INI_LOOP
000077 01fb      	MOVW R30,R22
000078 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000079 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007a bfed      	OUT  SPL,R30
00007b e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007d e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007e e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007f 940c 00a3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;//final project stopw
                 ;//kelompok 13
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;char tampung[16];   //array tempat kita memunculkan kata2 pada LCD
                 ;int ms1,ms2,s1,s2,m1,m2;  //variabel parameter waktu milidetik, detik dan menit
                 ;int p,r;            //variabel state untuk pause dan reset
                 ;
                 ;
                 ;// Exstenal interrupt 0 service routine
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0013 {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
000081 93ea      	ST   -Y,R30
000082 93fa      	ST   -Y,R31
000083 b7ef      	IN   R30,SREG
000084 93ea      	ST   -Y,R30
                 ; 0000 0014 //pleace your code here
                 ; 0000 0015     p = p + 1;
000085 91e0 0178 	LDS  R30,_p
000087 91f0 0179 	LDS  R31,_p+1
000089 9631      	ADIW R30,1
00008a 93e0 0178 	STS  _p,R30
00008c 93f0 0179 	STS  _p+1,R31
                 ; 0000 0016     r = 0;
00008e e0e0      	LDI  R30,LOW(0)
00008f 93e0 017a 	STS  _r,R30
000091 93e0 017b 	STS  _r+1,R30
                 ; 0000 0017 }
000093 91e9      	LD   R30,Y+
000094 bfef      	OUT  SREG,R30
000095 91f9      	LD   R31,Y+
000096 91e9      	LD   R30,Y+
000097 9518      	RETI
                 ; .FEND
                 ;
                 ;// Eksternal Interrupt 1 service rouine
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 001B {
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
000098 93ea      	ST   -Y,R30
000099 93fa      	ST   -Y,R31
                 ; 0000 001C //place your code here
                 ; 0000 001D     r = 1;
00009a e0e1      	LDI  R30,LOW(1)
00009b e0f0      	LDI  R31,HIGH(1)
00009c 93e0 017a 	STS  _r,R30
00009e 93f0 017b 	STS  _r+1,R31
                 ; 0000 001E }
0000a0 91f9      	LD   R31,Y+
0000a1 91e9      	LD   R30,Y+
0000a2 9518      	RETI
                 ; .FEND
                 ;
                 ;// Declare your global vriables here
                 ;
                 ;void main(void)
                 ; 0000 0023 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0024 
                 ; 0000 0025 PORTA=0x00;
0000a3 e0e0      	LDI  R30,LOW(0)
0000a4 bbeb      	OUT  0x1B,R30
                 ; 0000 0026 DDRA=0x00;
0000a5 bbea      	OUT  0x1A,R30
                 ; 0000 0027 
                 ; 0000 0028 
                 ; 0000 0029 PORTB=0x00;
0000a6 bbe8      	OUT  0x18,R30
                 ; 0000 002A DDRB=0x00;
0000a7 bbe7      	OUT  0x17,R30
                 ; 0000 002B 
                 ; 0000 002C 
                 ; 0000 002D PORTC=0x00;
0000a8 bbe5      	OUT  0x15,R30
                 ; 0000 002E DDRC=0xFF;
0000a9 efef      	LDI  R30,LOW(255)
0000aa bbe4      	OUT  0x14,R30
                 ; 0000 002F 
                 ; 0000 0030 
                 ; 0000 0031 PORTD=0x00;
0000ab e0e0      	LDI  R30,LOW(0)
0000ac bbe2      	OUT  0x12,R30
                 ; 0000 0032 DDRD=0x00;
0000ad bbe1      	OUT  0x11,R30
                 ; 0000 0033 
                 ; 0000 0034 
                 ; 0000 0035 TCCR0=0x00;
0000ae bfe3      	OUT  0x33,R30
                 ; 0000 0036 TCNT0=0x00;
0000af bfe2      	OUT  0x32,R30
                 ; 0000 0037 OCR0=0x00;
0000b0 bfec      	OUT  0x3C,R30
                 ; 0000 0038 
                 ; 0000 0039 
                 ; 0000 003A TCCR1A=0x00;
0000b1 bdef      	OUT  0x2F,R30
                 ; 0000 003B TCCR1B=0x00;
0000b2 bdee      	OUT  0x2E,R30
                 ; 0000 003C TCNT1H=0x00;
0000b3 bded      	OUT  0x2D,R30
                 ; 0000 003D TCNT1L=0x00;
0000b4 bdec      	OUT  0x2C,R30
                 ; 0000 003E ICR1H=0x00;
0000b5 bde7      	OUT  0x27,R30
                 ; 0000 003F ICR1L=0x00;
0000b6 bde6      	OUT  0x26,R30
                 ; 0000 0040 OCR1AH=0x00;
0000b7 bdeb      	OUT  0x2B,R30
                 ; 0000 0041 OCR1AL=0x00;
0000b8 bdea      	OUT  0x2A,R30
                 ; 0000 0042 OCR1BH=0x00;
0000b9 bde9      	OUT  0x29,R30
                 ; 0000 0043 OCR1BL=0x00;
0000ba bde8      	OUT  0x28,R30
                 ; 0000 0044 
                 ; 0000 0045 
                 ; 0000 0046 ASSR=0x00;
0000bb bde2      	OUT  0x22,R30
                 ; 0000 0047 TCCR2=0x00;
0000bc bde5      	OUT  0x25,R30
                 ; 0000 0048 TCNT2=0x00;
0000bd bde4      	OUT  0x24,R30
                 ; 0000 0049 OCR2=0x00;
0000be bde3      	OUT  0x23,R30
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C GICR|=0xC0;
0000bf b7eb      	IN   R30,0x3B
0000c0 6ce0      	ORI  R30,LOW(0xC0)
0000c1 bfeb      	OUT  0x3B,R30
                 ; 0000 004D MCUCR=0x0A;
0000c2 e0ea      	LDI  R30,LOW(10)
0000c3 bfe5      	OUT  0x35,R30
                 ; 0000 004E MCUCSR=0x00;
0000c4 e0e0      	LDI  R30,LOW(0)
0000c5 bfe4      	OUT  0x34,R30
                 ; 0000 004F GIFR=0xC0;
0000c6 ece0      	LDI  R30,LOW(192)
0000c7 bfea      	OUT  0x3A,R30
                 ; 0000 0050 
                 ; 0000 0051 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0052 TIMSK=0x00;
0000c8 e0e0      	LDI  R30,LOW(0)
0000c9 bfe9      	OUT  0x39,R30
                 ; 0000 0053 
                 ; 0000 0054 
                 ; 0000 0055 UCSRB=0x00;
0000ca b9ea      	OUT  0xA,R30
                 ; 0000 0056 
                 ; 0000 0057 
                 ; 0000 0058 ACSR=0x80;
0000cb e8e0      	LDI  R30,LOW(128)
0000cc b9e8      	OUT  0x8,R30
                 ; 0000 0059 SFIOR=0x00;
0000cd e0e0      	LDI  R30,LOW(0)
0000ce bfe0      	OUT  0x30,R30
                 ; 0000 005A ADCSRA=0x00;
0000cf b9e6      	OUT  0x6,R30
                 ; 0000 005B 
                 ; 0000 005C 
                 ; 0000 005D SPCR=0x00;
0000d0 b9ed      	OUT  0xD,R30
                 ; 0000 005E 
                 ; 0000 005F 
                 ; 0000 0060 TWCR=0x00;
0000d1 bfe6      	OUT  0x36,R30
                 ; 0000 0061 
                 ; 0000 0062 
                 ; 0000 0063 lcd_init(16);
0000d2 e1a0      	LDI  R26,LOW(16)
0000d3 940e 0394 	CALL _lcd_init
                 ; 0000 0064 
                 ; 0000 0065 //Global enable interrupts
                 ; 0000 0066 #asm("sei")
0000d5 9478      	sei
                 ; 0000 0067 
                 ; 0000 0068 while (1)
                 _0x3:
                 ; 0000 0069       {
                 ; 0000 006A      //place your code here
                 ; 0000 006B       delay_ms (4);
0000d6 e0a4      	LDI  R26,LOW(4)
0000d7 e0b0      	LDI  R27,0
0000d8 940e 041b 	CALL _delay_ms
                 ; 0000 006C       if (r == 0)
0000da 91e0 017a 	LDS  R30,_r
0000dc 91f0 017b 	LDS  R31,_r+1
0000de 9730      	SBIW R30,0
0000df f4f9      	BRNE _0x6
                 ; 0000 006D       { ms1 = ms1;
0000e0 0122      	MOVW R4,R4
                 ; 0000 006E        if (p == 0)
0000e1 91e0 0178 	LDS  R30,_p
0000e3 91f0 0179 	LDS  R31,_p+1
0000e5 9730      	SBIW R30,0
0000e6 f411      	BRNE _0x7
                 ; 0000 006F        {
                 ; 0000 0070        ms1 = ms1;
0000e7 0122      	MOVW R4,R4
                 ; 0000 0071        }
                 ; 0000 0072        else if (p == 1)
0000e8 c015      	RJMP _0x8
                 _0x7:
0000e9 91a0 0178 	LDS  R26,_p
0000eb 91b0 0179 	LDS  R27,_p+1
0000ed 9711      	SBIW R26,1
0000ee f421      	BRNE _0x9
                 ; 0000 0073        {
                 ; 0000 0074        ms1 = ms1 + 1;
0000ef 01f2      	MOVW R30,R4
0000f0 9631      	ADIW R30,1
0000f1 012f      	MOVW R4,R30
                 ; 0000 0075        }
                 ; 0000 0076        else if (p == 2)
0000f2 c00b      	RJMP _0xA
                 _0x9:
0000f3 91a0 0178 	LDS  R26,_p
0000f5 91b0 0179 	LDS  R27,_p+1
0000f7 9712      	SBIW R26,2
0000f8 f429      	BRNE _0xB
                 ; 0000 0077        {
                 ; 0000 0078         p = 0;
0000f9 e0e0      	LDI  R30,LOW(0)
0000fa 93e0 0178 	STS  _p,R30
0000fc 93e0 0179 	STS  _p+1,R30
                 ; 0000 0079        }
                 ; 0000 007A        }
                 _0xB:
                 _0xA:
                 _0x8:
                 ; 0000 007B       else if (r == 1)
0000fe c015      	RJMP _0xC
                 _0x6:
0000ff 91a0 017a 	LDS  R26,_r
000101 91b0 017b 	LDS  R27,_r+1
000103 9711      	SBIW R26,1
000104 f479      	BRNE _0xD
                 ; 0000 007C       {
                 ; 0000 007D        ms1 = 0; ms2 = 0; s1 = 0; s2 = 0; m1 = 0; m2 = 0;
000105 2444      	CLR  R4
000106 2455      	CLR  R5
000107 2466      	CLR  R6
000108 2477      	CLR  R7
000109 2488      	CLR  R8
00010a 2499      	CLR  R9
00010b 24aa      	CLR  R10
00010c 24bb      	CLR  R11
00010d 24cc      	CLR  R12
00010e 24dd      	CLR  R13
00010f e0e0      	LDI  R30,LOW(0)
000110 93e0 0176 	STS  _m2,R30
000112 93e0 0177 	STS  _m2+1,R30
                 ; 0000 007E       }
                 ; 0000 007F        if (ms1 == 10)
                 _0xD:
                 _0xC:
000114 e0ea      	LDI  R30,LOW(10)
000115 e0f0      	LDI  R31,HIGH(10)
000116 15e4      	CP   R30,R4
000117 05f5      	CPC  R31,R5
000118 f429      	BRNE _0xE
                 ; 0000 0080       {
                 ; 0000 0081            ms1 = 0;
000119 2444      	CLR  R4
00011a 2455      	CLR  R5
                 ; 0000 0082            ms2 = ms2 + 1;
00011b 01f3      	MOVW R30,R6
00011c 9631      	ADIW R30,1
00011d 013f      	MOVW R6,R30
                 ; 0000 0083       }
                 ; 0000 0084       if (ms2 == 6)
                 _0xE:
00011e e0e6      	LDI  R30,LOW(6)
00011f e0f0      	LDI  R31,HIGH(6)
000120 15e6      	CP   R30,R6
000121 05f7      	CPC  R31,R7
000122 f429      	BRNE _0xF
                 ; 0000 0085       {
                 ; 0000 0086            ms2 = 0;
000123 2466      	CLR  R6
000124 2477      	CLR  R7
                 ; 0000 0087            s1 = s1 + 1;
000125 01f4      	MOVW R30,R8
000126 9631      	ADIW R30,1
000127 014f      	MOVW R8,R30
                 ; 0000 0088       }
                 ; 0000 0089       if (s1 == 10);
                 _0xF:
                 ; 0000 008A       {
                 ; 0000 008B           s1 = 0;
000128 2488      	CLR  R8
000129 2499      	CLR  R9
                 ; 0000 008C           s2 = s2 + 1;
00012a 01f5      	MOVW R30,R10
00012b 9631      	ADIW R30,1
00012c 015f      	MOVW R10,R30
                 ; 0000 008D       }
                 ; 0000 008E       if (s2 == 6)
00012d e0e6      	LDI  R30,LOW(6)
00012e e0f0      	LDI  R31,HIGH(6)
00012f 15ea      	CP   R30,R10
000130 05fb      	CPC  R31,R11
000131 f429      	BRNE _0x11
                 ; 0000 008F       {
                 ; 0000 0090           s2 = 0;
000132 24aa      	CLR  R10
000133 24bb      	CLR  R11
                 ; 0000 0091           m1 = m1 + 1;
000134 01f6      	MOVW R30,R12
000135 9631      	ADIW R30,1
000136 016f      	MOVW R12,R30
                 ; 0000 0092       }
                 ; 0000 0093       if (m1 == 10)
                 _0x11:
000137 e0ea      	LDI  R30,LOW(10)
000138 e0f0      	LDI  R31,HIGH(10)
000139 15ec      	CP   R30,R12
00013a 05fd      	CPC  R31,R13
00013b f459      	BRNE _0x12
                 ; 0000 0094       {
                 ; 0000 0095           m1 = 0;
00013c 24cc      	CLR  R12
00013d 24dd      	CLR  R13
                 ; 0000 0096           m2 = m2 + 1;
00013e 91e0 0176 	LDS  R30,_m2
000140 91f0 0177 	LDS  R31,_m2+1
000142 9631      	ADIW R30,1
000143 93e0 0176 	STS  _m2,R30
000145 93f0 0177 	STS  _m2+1,R31
                 ; 0000 0097       }
                 ; 0000 0098 
                 ; 0000 0099       lcd_gotoxy(0,0);  //menampilkan data di kolom 0 baris ke-0
                 _0x12:
000147 e0e0      	LDI  R30,LOW(0)
000148 93ea      	ST   -Y,R30
000149 e0a0      	LDI  R26,LOW(0)
00014a 940e 0344 	CALL _lcd_gotoxy
                 ; 0000 009A       lcd_puts("stopw");
                +
00014c e6a0     +LDI R26 , LOW ( _0x13 + ( 0 ) )
00014d e0b1     +LDI R27 , HIGH ( _0x13 + ( 0 ) )
                 	__POINTW2MN _0x13,0
00014e 940e 0383 	CALL _lcd_puts
                 ; 0000 009B 
                 ; 0000 009C       sprintf(tampung,"%i%i : %i%i : %i%i ",m2,m1,s2,s1,ms2,ms1 ); //simpan data integer kearray tampung(16)
000150 e6e6      	LDI  R30,LOW(_tampung)
000151 e0f1      	LDI  R31,HIGH(_tampung)
000152 93fa      	ST   -Y,R31
000153 93ea      	ST   -Y,R30
                +
000154 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 6 ) )
000155 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW1FN _0x0,6
000156 93fa      	ST   -Y,R31
000157 93ea      	ST   -Y,R30
000158 91e0 0176 	LDS  R30,_m2
00015a 91f0 0177 	LDS  R31,_m2+1
00015c 940e 03dc 	CALL SUBOPT_0x0
00015e 01f6      	MOVW R30,R12
00015f 940e 03dc 	CALL SUBOPT_0x0
000161 01f5      	MOVW R30,R10
000162 940e 03dc 	CALL SUBOPT_0x0
000164 01f4      	MOVW R30,R8
000165 940e 03dc 	CALL SUBOPT_0x0
000167 01f3      	MOVW R30,R6
000168 940e 03dc 	CALL SUBOPT_0x0
00016a 01f2      	MOVW R30,R4
00016b 940e 03dc 	CALL SUBOPT_0x0
00016d e188      	LDI  R24,24
00016e 940e 02f0 	CALL _sprintf
000170 966c      	ADIW R28,28
                 ; 0000 009D       lcd_gotoxy(0,1);   //menampilkan data di kolom 0 bais ke-2
000171 e0e0      	LDI  R30,LOW(0)
000172 93ea      	ST   -Y,R30
000173 e0a1      	LDI  R26,LOW(1)
000174 940e 0344 	CALL _lcd_gotoxy
                 ; 0000 009E       lcd_puts(tampung); //menampilkan array tampung bertype char
000176 e6a6      	LDI  R26,LOW(_tampung)
000177 e0b1      	LDI  R27,HIGH(_tampung)
000178 940e 0383 	CALL _lcd_puts
                 ; 0000 009F      }
00017a cf5b      	RJMP _0x3
                 ; 0000 00A0 }
                 _0x14:
00017b cfff      	RJMP _0x14
                 ; .FEND
                 
                 	.DSEG
                 _0x13:
000160           	.BYTE 0x6
                 ;
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00017c 93ba      	ST   -Y,R27
00017d 93aa      	ST   -Y,R26
00017e 931a      	ST   -Y,R17
00017f 930a      	ST   -Y,R16
000180 81aa      	LDD  R26,Y+2
000181 81bb      	LDD  R27,Y+2+1
000182 9612      	ADIW R26,2
000183 940e 0432 	CALL __GETW1P
000185 9730      	SBIW R30,0
000186 f159      	BREQ _0x2000010
000187 81aa      	LDD  R26,Y+2
000188 81bb      	LDD  R27,Y+2+1
000189 9614      	ADIW R26,4
00018a 940e 0432 	CALL __GETW1P
00018c 018f      	MOVW R16,R30
00018d 9730      	SBIW R30,0
00018e f061      	BREQ _0x2000012
                +
00018f 3002     +CPI R16 , LOW ( 2 )
000190 e0e0     +LDI R30 , HIGH ( 2 )
000191 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000192 f098      	BRLO _0x2000013
000193 01f8      	MOVW R30,R16
000194 9731      	SBIW R30,1
000195 018f      	MOVW R16,R30
                +
000196 81aa     +LDD R26 , Y + 2
000197 81bb     +LDD R27 , Y + 2 + 1
000198 9614     +ADIW R26 , 4
000199 93ed     +ST X + , R30
00019a 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
00019b 81aa      	LDD  R26,Y+2
00019c 81bb      	LDD  R27,Y+2+1
00019d 9612      	ADIW R26,2
00019e 91ed      	LD   R30,X+
00019f 91fd      	LD   R31,X+
0001a0 9631      	ADIW R30,1
0001a1 93fe      	ST   -X,R31
0001a2 93ee      	ST   -X,R30
0001a3 9731      	SBIW R30,1
0001a4 81ac      	LDD  R26,Y+4
0001a5 83a0      	STD  Z+0,R26
                 _0x2000013:
0001a6 81aa      	LDD  R26,Y+2
0001a7 81bb      	LDD  R27,Y+2+1
0001a8 940e 0432 	CALL __GETW1P
0001aa 23ff      	TST  R31
0001ab f02a      	BRMI _0x2000014
0001ac 91ed      	LD   R30,X+
0001ad 91fd      	LD   R31,X+
0001ae 9631      	ADIW R30,1
0001af 93fe      	ST   -X,R31
0001b0 93ee      	ST   -X,R30
                 _0x2000014:
0001b1 c006      	RJMP _0x2000015
                 _0x2000010:
0001b2 81aa      	LDD  R26,Y+2
0001b3 81bb      	LDD  R27,Y+2+1
0001b4 efef      	LDI  R30,LOW(65535)
0001b5 efff      	LDI  R31,HIGH(65535)
0001b6 93ed      	ST   X+,R30
0001b7 93fc      	ST   X,R31
                 _0x2000015:
0001b8 8119      	LDD  R17,Y+1
0001b9 8108      	LDD  R16,Y+0
0001ba 9625      	ADIW R28,5
0001bb 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001bc 93ba      	ST   -Y,R27
0001bd 93aa      	ST   -Y,R26
0001be 9726      	SBIW R28,6
0001bf 940e 043f 	CALL __SAVELOCR6
0001c1 e010      	LDI  R17,0
0001c2 85ac      	LDD  R26,Y+12
0001c3 85bd      	LDD  R27,Y+12+1
0001c4 e0e0      	LDI  R30,LOW(0)
0001c5 e0f0      	LDI  R31,HIGH(0)
0001c6 93ed      	ST   X+,R30
0001c7 93fc      	ST   X,R31
                 _0x2000016:
0001c8 89ea      	LDD  R30,Y+18
0001c9 89fb      	LDD  R31,Y+18+1
0001ca 9631      	ADIW R30,1
0001cb 8bea      	STD  Y+18,R30
0001cc 8bfb      	STD  Y+18+1,R31
0001cd 9731      	SBIW R30,1
0001ce 91e4      	LPM  R30,Z
0001cf 2f2e      	MOV  R18,R30
0001d0 30e0      	CPI  R30,0
0001d1 f409      	BRNE PC+2
0001d2 c115      	RJMP _0x2000018
0001d3 2fe1      	MOV  R30,R17
0001d4 30e0      	CPI  R30,0
0001d5 f439      	BRNE _0x200001C
0001d6 3225      	CPI  R18,37
0001d7 f411      	BRNE _0x200001D
0001d8 e011      	LDI  R17,LOW(1)
0001d9 c002      	RJMP _0x200001E
                 _0x200001D:
0001da 940e 03e1 	CALL SUBOPT_0x1
                 _0x200001E:
0001dc c10a      	RJMP _0x200001B
                 _0x200001C:
0001dd 30e1      	CPI  R30,LOW(0x1)
0001de f4a9      	BRNE _0x200001F
0001df 3225      	CPI  R18,37
0001e0 f419      	BRNE _0x2000020
0001e1 940e 03e1 	CALL SUBOPT_0x1
0001e3 c102      	RJMP _0x20000CC
                 _0x2000020:
0001e4 e012      	LDI  R17,LOW(2)
0001e5 e040      	LDI  R20,LOW(0)
0001e6 e000      	LDI  R16,LOW(0)
0001e7 322d      	CPI  R18,45
0001e8 f411      	BRNE _0x2000021
0001e9 e001      	LDI  R16,LOW(1)
0001ea c0fc      	RJMP _0x200001B
                 _0x2000021:
0001eb 322b      	CPI  R18,43
0001ec f411      	BRNE _0x2000022
0001ed e24b      	LDI  R20,LOW(43)
0001ee c0f8      	RJMP _0x200001B
                 _0x2000022:
0001ef 3220      	CPI  R18,32
0001f0 f411      	BRNE _0x2000023
0001f1 e240      	LDI  R20,LOW(32)
0001f2 c0f4      	RJMP _0x200001B
                 _0x2000023:
0001f3 c002      	RJMP _0x2000024
                 _0x200001F:
0001f4 30e2      	CPI  R30,LOW(0x2)
0001f5 f439      	BRNE _0x2000025
                 _0x2000024:
0001f6 e050      	LDI  R21,LOW(0)
0001f7 e013      	LDI  R17,LOW(3)
0001f8 3320      	CPI  R18,48
0001f9 f411      	BRNE _0x2000026
0001fa 6800      	ORI  R16,LOW(128)
0001fb c0eb      	RJMP _0x200001B
                 _0x2000026:
0001fc c003      	RJMP _0x2000027
                 _0x2000025:
0001fd 30e3      	CPI  R30,LOW(0x3)
0001fe f009      	BREQ PC+2
0001ff c0e7      	RJMP _0x200001B
                 _0x2000027:
000200 3320      	CPI  R18,48
000201 f010      	BRLO _0x200002A
000202 332a      	CPI  R18,58
000203 f008      	BRLO _0x200002B
                 _0x200002A:
000204 c007      	RJMP _0x2000029
                 _0x200002B:
000205 e0aa      	LDI  R26,LOW(10)
000206 9f5a      	MUL  R21,R26
000207 2d50      	MOV  R21,R0
000208 2fe2      	MOV  R30,R18
000209 53e0      	SUBI R30,LOW(48)
00020a 0f5e      	ADD  R21,R30
00020b c0db      	RJMP _0x200001B
                 _0x2000029:
00020c 2fe2      	MOV  R30,R18
00020d 36e3      	CPI  R30,LOW(0x63)
00020e f449      	BRNE _0x200002F
00020f 940e 03e8 	CALL SUBOPT_0x2
000211 89e8      	LDD  R30,Y+16
000212 89f9      	LDD  R31,Y+16+1
000213 81a4      	LDD  R26,Z+4
000214 93aa      	ST   -Y,R26
000215 940e 03ee 	CALL SUBOPT_0x3
000217 c0ce      	RJMP _0x2000030
                 _0x200002F:
000218 37e3      	CPI  R30,LOW(0x73)
000219 f441      	BRNE _0x2000032
00021a 940e 03e8 	CALL SUBOPT_0x2
00021c 940e 03f4 	CALL SUBOPT_0x4
00021e 940e 03c3 	CALL _strlen
000220 2f1e      	MOV  R17,R30
000221 c00a      	RJMP _0x2000033
                 _0x2000032:
000222 37e0      	CPI  R30,LOW(0x70)
000223 f461      	BRNE _0x2000035
000224 940e 03e8 	CALL SUBOPT_0x2
000226 940e 03f4 	CALL SUBOPT_0x4
000228 940e 03cf 	CALL _strlenf
00022a 2f1e      	MOV  R17,R30
00022b 6008      	ORI  R16,LOW(8)
                 _0x2000033:
00022c 6002      	ORI  R16,LOW(2)
00022d 770f      	ANDI R16,LOW(127)
00022e e030      	LDI  R19,LOW(0)
00022f c034      	RJMP _0x2000036
                 _0x2000035:
000230 36e4      	CPI  R30,LOW(0x64)
000231 f011      	BREQ _0x2000039
000232 36e9      	CPI  R30,LOW(0x69)
000233 f411      	BRNE _0x200003A
                 _0x2000039:
000234 6004      	ORI  R16,LOW(4)
000235 c002      	RJMP _0x200003B
                 _0x200003A:
000236 37e5      	CPI  R30,LOW(0x75)
000237 f431      	BRNE _0x200003C
                 _0x200003B:
000238 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000239 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00023a 83ee      	STD  Y+6,R30
00023b 83ff      	STD  Y+6+1,R31
00023c e015      	LDI  R17,LOW(5)
00023d c00c      	RJMP _0x200003D
                 _0x200003C:
00023e 35e8      	CPI  R30,LOW(0x58)
00023f f411      	BRNE _0x200003F
000240 6008      	ORI  R16,LOW(8)
000241 c003      	RJMP _0x2000040
                 _0x200003F:
000242 37e8      	CPI  R30,LOW(0x78)
000243 f009      	BREQ PC+2
000244 c0a1      	RJMP _0x2000071
                 _0x2000040:
000245 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000246 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000247 83ee      	STD  Y+6,R30
000248 83ff      	STD  Y+6+1,R31
000249 e014      	LDI  R17,LOW(4)
                 _0x200003D:
00024a ff02      	SBRS R16,2
00024b c014      	RJMP _0x2000042
00024c 940e 03e8 	CALL SUBOPT_0x2
00024e 940e 03fe 	CALL SUBOPT_0x5
000250 85ab      	LDD  R26,Y+11
000251 23aa      	TST  R26
000252 f43a      	BRPL _0x2000043
000253 85ea      	LDD  R30,Y+10
000254 85fb      	LDD  R31,Y+10+1
000255 940e 0429 	CALL __ANEGW1
000257 87ea      	STD  Y+10,R30
000258 87fb      	STD  Y+10+1,R31
000259 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00025a 3040      	CPI  R20,0
00025b f011      	BREQ _0x2000044
00025c 5f1f      	SUBI R17,-LOW(1)
00025d c001      	RJMP _0x2000045
                 _0x2000044:
00025e 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00025f c004      	RJMP _0x2000046
                 _0x2000042:
000260 940e 03e8 	CALL SUBOPT_0x2
000262 940e 03fe 	CALL SUBOPT_0x5
                 _0x2000046:
                 _0x2000036:
000264 fd00      	SBRC R16,0
000265 c011      	RJMP _0x2000047
                 _0x2000048:
000266 1715      	CP   R17,R21
000267 f478      	BRSH _0x200004A
000268 ff07      	SBRS R16,7
000269 c008      	RJMP _0x200004B
00026a ff02      	SBRS R16,2
00026b c004      	RJMP _0x200004C
00026c 7f0b      	ANDI R16,LOW(251)
00026d 2f24      	MOV  R18,R20
00026e 5011      	SUBI R17,LOW(1)
00026f c001      	RJMP _0x200004D
                 _0x200004C:
000270 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000271 c001      	RJMP _0x200004E
                 _0x200004B:
000272 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000273 940e 03e1 	CALL SUBOPT_0x1
000275 5051      	SUBI R21,LOW(1)
000276 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000277 2f31      	MOV  R19,R17
000278 ff01      	SBRS R16,1
000279 c017      	RJMP _0x200004F
                 _0x2000050:
00027a 3030      	CPI  R19,0
00027b f0a1      	BREQ _0x2000052
00027c ff03      	SBRS R16,3
00027d c006      	RJMP _0x2000053
00027e 81ee      	LDD  R30,Y+6
00027f 81ff      	LDD  R31,Y+6+1
000280 9125      	LPM  R18,Z+
000281 83ee      	STD  Y+6,R30
000282 83ff      	STD  Y+6+1,R31
000283 c005      	RJMP _0x2000054
                 _0x2000053:
000284 81ae      	LDD  R26,Y+6
000285 81bf      	LDD  R27,Y+6+1
000286 912d      	LD   R18,X+
000287 83ae      	STD  Y+6,R26
000288 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000289 940e 03e1 	CALL SUBOPT_0x1
00028b 3050      	CPI  R21,0
00028c f009      	BREQ _0x2000055
00028d 5051      	SUBI R21,LOW(1)
                 _0x2000055:
00028e 5031      	SUBI R19,LOW(1)
00028f cfea      	RJMP _0x2000050
                 _0x2000052:
000290 c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000291 e320      	LDI  R18,LOW(48)
000292 81ee      	LDD  R30,Y+6
000293 81ff      	LDD  R31,Y+6+1
000294 940e 0436 	CALL __GETW1PF
000296 87e8      	STD  Y+8,R30
000297 87f9      	STD  Y+8+1,R31
000298 81ee      	LDD  R30,Y+6
000299 81ff      	LDD  R31,Y+6+1
00029a 9632      	ADIW R30,2
00029b 83ee      	STD  Y+6,R30
00029c 83ff      	STD  Y+6+1,R31
                 _0x200005A:
00029d 85e8      	LDD  R30,Y+8
00029e 85f9      	LDD  R31,Y+8+1
00029f 85aa      	LDD  R26,Y+10
0002a0 85bb      	LDD  R27,Y+10+1
0002a1 17ae      	CP   R26,R30
0002a2 07bf      	CPC  R27,R31
0002a3 f050      	BRLO _0x200005C
0002a4 5f2f      	SUBI R18,-LOW(1)
0002a5 85a8      	LDD  R26,Y+8
0002a6 85b9      	LDD  R27,Y+8+1
0002a7 85ea      	LDD  R30,Y+10
0002a8 85fb      	LDD  R31,Y+10+1
0002a9 1bea      	SUB  R30,R26
0002aa 0bfb      	SBC  R31,R27
0002ab 87ea      	STD  Y+10,R30
0002ac 87fb      	STD  Y+10+1,R31
0002ad cfef      	RJMP _0x200005A
                 _0x200005C:
0002ae 332a      	CPI  R18,58
0002af f028      	BRLO _0x200005D
0002b0 ff03      	SBRS R16,3
0002b1 c002      	RJMP _0x200005E
0002b2 5f29      	SUBI R18,-LOW(7)
0002b3 c001      	RJMP _0x200005F
                 _0x200005E:
0002b4 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0002b5 fd04      	SBRC R16,4
0002b6 c01a      	RJMP _0x2000061
0002b7 3321      	CPI  R18,49
0002b8 f420      	BRSH _0x2000063
0002b9 85a8      	LDD  R26,Y+8
0002ba 85b9      	LDD  R27,Y+8+1
0002bb 9711      	SBIW R26,1
0002bc f409      	BRNE _0x2000062
                 _0x2000063:
0002bd c009      	RJMP _0x20000CD
                 _0x2000062:
0002be 1753      	CP   R21,R19
0002bf f010      	BRLO _0x2000067
0002c0 ff00      	SBRS R16,0
0002c1 c001      	RJMP _0x2000068
                 _0x2000067:
0002c2 c013      	RJMP _0x2000066
                 _0x2000068:
0002c3 e220      	LDI  R18,LOW(32)
0002c4 ff07      	SBRS R16,7
0002c5 c00b      	RJMP _0x2000069
0002c6 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0002c7 6100      	ORI  R16,LOW(16)
0002c8 ff02      	SBRS R16,2
0002c9 c007      	RJMP _0x200006A
0002ca 7f0b      	ANDI R16,LOW(251)
0002cb 934a      	ST   -Y,R20
0002cc 940e 03ee 	CALL SUBOPT_0x3
0002ce 3050      	CPI  R21,0
0002cf f009      	BREQ _0x200006B
0002d0 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0002d1 940e 03e1 	CALL SUBOPT_0x1
0002d3 3050      	CPI  R21,0
0002d4 f009      	BREQ _0x200006C
0002d5 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0002d6 5031      	SUBI R19,LOW(1)
0002d7 85a8      	LDD  R26,Y+8
0002d8 85b9      	LDD  R27,Y+8+1
0002d9 9712      	SBIW R26,2
0002da f008      	BRLO _0x2000059
0002db cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0002dc ff00      	SBRS R16,0
0002dd c008      	RJMP _0x200006D
                 _0x200006E:
0002de 3050      	CPI  R21,0
0002df f031      	BREQ _0x2000070
0002e0 5051      	SUBI R21,LOW(1)
0002e1 e2e0      	LDI  R30,LOW(32)
0002e2 93ea      	ST   -Y,R30
0002e3 940e 03ee 	CALL SUBOPT_0x3
0002e5 cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0002e6 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0002e7 cee0      	RJMP _0x2000016
                 _0x2000018:
0002e8 85ac      	LDD  R26,Y+12
0002e9 85bd      	LDD  R27,Y+12+1
0002ea 940e 0432 	CALL __GETW1P
0002ec 940e 0446 	CALL __LOADLOCR6
0002ee 9664      	ADIW R28,20
0002ef 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002f0 92ff      	PUSH R15
0002f1 2ef8      	MOV  R15,R24
0002f2 9726      	SBIW R28,6
0002f3 940e 0441 	CALL __SAVELOCR4
0002f5 940e 0406 	CALL SUBOPT_0x6
0002f7 9730      	SBIW R30,0
0002f8 f419      	BRNE _0x2000072
0002f9 efef      	LDI  R30,LOW(65535)
0002fa efff      	LDI  R31,HIGH(65535)
0002fb c023      	RJMP _0x20C0002
                 _0x2000072:
0002fc 01de      	MOVW R26,R28
0002fd 9616      	ADIW R26,6
0002fe 940e 0425 	CALL __ADDW2R15
000300 018d      	MOVW R16,R26
000301 940e 0406 	CALL SUBOPT_0x6
000303 83ee      	STD  Y+6,R30
000304 83ff      	STD  Y+6+1,R31
000305 e0e0      	LDI  R30,LOW(0)
000306 87e8      	STD  Y+8,R30
000307 87e9      	STD  Y+8+1,R30
000308 01de      	MOVW R26,R28
000309 961a      	ADIW R26,10
00030a 940e 0425 	CALL __ADDW2R15
00030c 940e 0432 	CALL __GETW1P
00030e 93fa      	ST   -Y,R31
00030f 93ea      	ST   -Y,R30
000310 931a      	ST   -Y,R17
000311 930a      	ST   -Y,R16
000312 e7ec      	LDI  R30,LOW(_put_buff_G100)
000313 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000314 93fa      	ST   -Y,R31
000315 93ea      	ST   -Y,R30
000316 01de      	MOVW R26,R28
000317 961a      	ADIW R26,10
000318 dea3      	RCALL __print_G100
000319 019f      	MOVW R18,R30
00031a 81ae      	LDD  R26,Y+6
00031b 81bf      	LDD  R27,Y+6+1
00031c e0e0      	LDI  R30,LOW(0)
00031d 93ec      	ST   X,R30
00031e 01f9      	MOVW R30,R18
                 _0x20C0002:
00031f 940e 0448 	CALL __LOADLOCR4
000321 962a      	ADIW R28,10
000322 90ff      	POP  R15
000323 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G102:
                 ; .FSTART __lcd_write_nibble_G102
000324 93aa      	ST   -Y,R26
000325 b3e5      	IN   R30,0x15
000326 70ef      	ANDI R30,LOW(0xF)
000327 2fae      	MOV  R26,R30
000328 81e8      	LD   R30,Y
000329 7fe0      	ANDI R30,LOW(0xF0)
00032a 2bea      	OR   R30,R26
00032b bbe5      	OUT  0x15,R30
                +
00032c e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00032d 958a     +DEC R24
00032e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00032f 9aaa      	SBI  0x15,2
                +
000330 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000331 958a     +DEC R24
000332 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000333 98aa      	CBI  0x15,2
                +
000334 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000335 958a     +DEC R24
000336 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000337 c089      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000338 93aa      	ST   -Y,R26
000339 81a8      	LD   R26,Y
00033a dfe9      	RCALL __lcd_write_nibble_G102
00033b 81e8          ld    r30,y
00033c 95e2          swap  r30
00033d 83e8          st    y,r30
00033e 81a8      	LD   R26,Y
00033f dfe4      	RCALL __lcd_write_nibble_G102
                +
000340 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000341 958a     +DEC R24
000342 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000343 c07d      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000344 93aa      	ST   -Y,R26
000345 81e8      	LD   R30,Y
000346 e0f0      	LDI  R31,0
000347 58e0      	SUBI R30,LOW(-__base_y_G102)
000348 4ffe      	SBCI R31,HIGH(-__base_y_G102)
000349 81e0      	LD   R30,Z
00034a 81a9      	LDD  R26,Y+1
00034b 0fae      	ADD  R26,R30
00034c dfeb      	RCALL __lcd_write_data
00034d 81e9      	LDD  R30,Y+1
00034e 93e0 0184 	STS  __lcd_x,R30
000350 81e8      	LD   R30,Y
000351 93e0 0185 	STS  __lcd_y,R30
000353 9622      	ADIW R28,2
000354 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000355 e0a2      	LDI  R26,LOW(2)
000356 940e 040d 	CALL SUBOPT_0x7
000358 e0ac      	LDI  R26,LOW(12)
000359 dfde      	RCALL __lcd_write_data
00035a e0a1      	LDI  R26,LOW(1)
00035b 940e 040d 	CALL SUBOPT_0x7
00035d e0e0      	LDI  R30,LOW(0)
00035e 93e0 0185 	STS  __lcd_y,R30
000360 93e0 0184 	STS  __lcd_x,R30
000362 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000363 93aa      	ST   -Y,R26
000364 81a8      	LD   R26,Y
000365 30aa      	CPI  R26,LOW(0xA)
000366 f031      	BREQ _0x2040005
000367 91e0 0186 	LDS  R30,__lcd_maxx
000369 91a0 0184 	LDS  R26,__lcd_x
00036b 17ae      	CP   R26,R30
00036c f060      	BRLO _0x2040004
                 _0x2040005:
00036d e0e0      	LDI  R30,LOW(0)
00036e 93ea      	ST   -Y,R30
00036f 91a0 0185 	LDS  R26,__lcd_y
000371 5faf      	SUBI R26,-LOW(1)
000372 93a0 0185 	STS  __lcd_y,R26
000374 dfcf      	RCALL _lcd_gotoxy
000375 81a8      	LD   R26,Y
000376 30aa      	CPI  R26,LOW(0xA)
000377 f409      	BRNE _0x2040007
000378 c048      	RJMP _0x20C0001
                 _0x2040007:
                 _0x2040004:
000379 91e0 0184 	LDS  R30,__lcd_x
00037b 5fef      	SUBI R30,-LOW(1)
00037c 93e0 0184 	STS  __lcd_x,R30
00037e 9aa8      	SBI  0x15,0
00037f 81a8      	LD   R26,Y
000380 dfb7      	RCALL __lcd_write_data
000381 98a8      	CBI  0x15,0
000382 c03e      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000383 93ba      	ST   -Y,R27
000384 93aa      	ST   -Y,R26
000385 931a      	ST   -Y,R17
                 _0x2040008:
000386 81a9      	LDD  R26,Y+1
000387 81ba      	LDD  R27,Y+1+1
000388 91ed      	LD   R30,X+
000389 83a9      	STD  Y+1,R26
00038a 83ba      	STD  Y+1+1,R27
00038b 2f1e      	MOV  R17,R30
00038c 30e0      	CPI  R30,0
00038d f019      	BREQ _0x204000A
00038e 2fa1      	MOV  R26,R17
00038f dfd3      	RCALL _lcd_putchar
000390 cff5      	RJMP _0x2040008
                 _0x204000A:
000391 8118      	LDD  R17,Y+0
000392 9623      	ADIW R28,3
000393 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000394 93aa      	ST   -Y,R26
000395 b3e4      	IN   R30,0x14
000396 6fe0      	ORI  R30,LOW(0xF0)
000397 bbe4      	OUT  0x14,R30
000398 9aa2      	SBI  0x14,2
000399 9aa0      	SBI  0x14,0
00039a 9aa1      	SBI  0x14,1
00039b 98aa      	CBI  0x15,2
00039c 98a8      	CBI  0x15,0
00039d 98a9      	CBI  0x15,1
00039e 81e8      	LD   R30,Y
00039f 93e0 0186 	STS  __lcd_maxx,R30
0003a1 58e0      	SUBI R30,-LOW(128)
                +
0003a2 93e0 0182+STS __base_y_G102 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G102,2
0003a4 81e8      	LD   R30,Y
0003a5 54e0      	SUBI R30,-LOW(192)
                +
0003a6 93e0 0183+STS __base_y_G102 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G102,3
0003a8 e1a4      	LDI  R26,LOW(20)
0003a9 e0b0      	LDI  R27,0
0003aa 940e 041b 	CALL _delay_ms
0003ac 940e 0413 	CALL SUBOPT_0x8
0003ae 940e 0413 	CALL SUBOPT_0x8
0003b0 940e 0413 	CALL SUBOPT_0x8
0003b2 e2a0      	LDI  R26,LOW(32)
0003b3 df70      	RCALL __lcd_write_nibble_G102
                +
0003b4 ec88     +LDI R24 , LOW ( 200 )
0003b5 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0003b6 9701     +SBIW R24 , 1
0003b7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0003b8 e2a8      	LDI  R26,LOW(40)
0003b9 df7e      	RCALL __lcd_write_data
0003ba e0a4      	LDI  R26,LOW(4)
0003bb df7c      	RCALL __lcd_write_data
0003bc e8a5      	LDI  R26,LOW(133)
0003bd df7a      	RCALL __lcd_write_data
0003be e0a6      	LDI  R26,LOW(6)
0003bf df78      	RCALL __lcd_write_data
0003c0 df94      	RCALL _lcd_clear
                 _0x20C0001:
0003c1 9621      	ADIW R28,1
0003c2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0003c3 93ba      	ST   -Y,R27
0003c4 93aa      	ST   -Y,R26
0003c5 91a9          ld   r26,y+
0003c6 91b9          ld   r27,y+
0003c7 27ee          clr  r30
0003c8 27ff          clr  r31
                 strlen0:
0003c9 916d          ld   r22,x+
0003ca 2366          tst  r22
0003cb f011          breq strlen1
0003cc 9631          adiw r30,1
0003cd cffb          rjmp strlen0
                 strlen1:
0003ce 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003cf 93ba      	ST   -Y,R27
0003d0 93aa      	ST   -Y,R26
0003d1 27aa          clr  r26
0003d2 27bb          clr  r27
0003d3 91e9          ld   r30,y+
0003d4 91f9          ld   r31,y+
                 strlenf0:
0003d5 9005      	lpm  r0,z+
0003d6 2000          tst  r0
0003d7 f011          breq strlenf1
0003d8 9611          adiw r26,1
0003d9 cffb          rjmp strlenf0
                 strlenf1:
0003da 01fd          movw r30,r26
0003db 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _tampung:
000166           	.BYTE 0x10
                 _m2:
000176           	.BYTE 0x2
                 _p:
000178           	.BYTE 0x2
                 _r:
00017a           	.BYTE 0x2
                 __seed_G101:
00017c           	.BYTE 0x4
                 __base_y_G102:
000180           	.BYTE 0x4
                 __lcd_x:
000184           	.BYTE 0x1
                 __lcd_y:
000185           	.BYTE 0x1
                 __lcd_maxx:
000186           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
0003dc 940e 042d 	CALL __CWD1
0003de 940e 043a 	CALL __PUTPARD1
0003e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
0003e1 932a      	ST   -Y,R18
0003e2 85ad      	LDD  R26,Y+13
0003e3 85be      	LDD  R27,Y+13+1
0003e4 85ef      	LDD  R30,Y+15
0003e5 89f8      	LDD  R31,Y+15+1
0003e6 9509      	ICALL
0003e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
0003e8 89e8      	LDD  R30,Y+16
0003e9 89f9      	LDD  R31,Y+16+1
0003ea 9734      	SBIW R30,4
0003eb 8be8      	STD  Y+16,R30
0003ec 8bf9      	STD  Y+16+1,R31
0003ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0003ee 85ad      	LDD  R26,Y+13
0003ef 85be      	LDD  R27,Y+13+1
0003f0 85ef      	LDD  R30,Y+15
0003f1 89f8      	LDD  R31,Y+15+1
0003f2 9509      	ICALL
0003f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0003f4 89a8      	LDD  R26,Y+16
0003f5 89b9      	LDD  R27,Y+16+1
0003f6 9614      	ADIW R26,4
0003f7 940e 0432 	CALL __GETW1P
0003f9 83ee      	STD  Y+6,R30
0003fa 83ff      	STD  Y+6+1,R31
0003fb 81ae      	LDD  R26,Y+6
0003fc 81bf      	LDD  R27,Y+6+1
0003fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0003fe 89a8      	LDD  R26,Y+16
0003ff 89b9      	LDD  R27,Y+16+1
000400 9614      	ADIW R26,4
000401 940e 0432 	CALL __GETW1P
000403 87ea      	STD  Y+10,R30
000404 87fb      	STD  Y+10+1,R31
000405 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000406 01de      	MOVW R26,R28
000407 961c      	ADIW R26,12
000408 940e 0425 	CALL __ADDW2R15
00040a 940e 0432 	CALL __GETW1P
00040c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00040d 940e 0338 	CALL __lcd_write_data
00040f e0a3      	LDI  R26,LOW(3)
000410 e0b0      	LDI  R27,0
000411 940c 041b 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
000413 e3a0      	LDI  R26,LOW(48)
000414 940e 0324 	CALL __lcd_write_nibble_G102
                +
000416 ec88     +LDI R24 , LOW ( 200 )
000417 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000418 9701     +SBIW R24 , 1
000419 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00041a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00041b 9610      	adiw r26,0
00041c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00041d ed80     +LDI R24 , LOW ( 0x7D0 )
00041e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00041f 9701     +SBIW R24 , 1
000420 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000421 95a8      	wdr
000422 9711      	sbiw r26,1
000423 f7c9      	brne __delay_ms0
                 __delay_ms1:
000424 9508      	ret
                 
                 __ADDW2R15:
000425 2400      	CLR  R0
000426 0daf      	ADD  R26,R15
000427 1db0      	ADC  R27,R0
000428 9508      	RET
                 
                 __ANEGW1:
000429 95f1      	NEG  R31
00042a 95e1      	NEG  R30
00042b 40f0      	SBCI R31,0
00042c 9508      	RET
                 
                 __CWD1:
00042d 2f6f      	MOV  R22,R31
00042e 0f66      	ADD  R22,R22
00042f 0b66      	SBC  R22,R22
000430 2f76      	MOV  R23,R22
000431 9508      	RET
                 
                 __GETW1P:
000432 91ed      	LD   R30,X+
000433 91fc      	LD   R31,X
000434 9711      	SBIW R26,1
000435 9508      	RET
                 
                 __GETW1PF:
000436 9005      	LPM  R0,Z+
000437 91f4      	LPM  R31,Z
000438 2de0      	MOV  R30,R0
000439 9508      	RET
                 
                 __PUTPARD1:
00043a 937a      	ST   -Y,R23
00043b 936a      	ST   -Y,R22
00043c 93fa      	ST   -Y,R31
00043d 93ea      	ST   -Y,R30
00043e 9508      	RET
                 
                 __SAVELOCR6:
00043f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000440 934a      	ST   -Y,R20
                 __SAVELOCR4:
000441 933a      	ST   -Y,R19
                 __SAVELOCR3:
000442 932a      	ST   -Y,R18
                 __SAVELOCR2:
000443 931a      	ST   -Y,R17
000444 930a      	ST   -Y,R16
000445 9508      	RET
                 
                 __LOADLOCR6:
000446 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000447 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000448 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000449 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00044a 8119      	LDD  R17,Y+1
00044b 8108      	LD   R16,Y
00044c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :  10 r5 :   3 r6 :   6 r7 :   3 
r8 :   5 r9 :   2 r10:   6 r11:   3 r12:   6 r13:   3 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  23 r25:   5 r26: 110 r27:  42 r28:  14 r29:   1 r30: 264 r31:  81 
x  :  23 y  : 176 z  :  15 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  31 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  39 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  61 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  27 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   8 cpc   :   6 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   0 jmp   :  23 ld    :  31 ldd   :  75 ldi   : 114 
lds   :  20 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  16 movw  :  31 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   8 out   :  47 pop   :   1 push  :   1 rcall :  14 ret   :  26 
reti  :   2 rjmp  :  62 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  24 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  65 std   :  31 sts   :  21 sub   :   1 subi  :  18 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 54 out of 116 (46.6%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00089a   2124     78   2202   16384  13.4%
[.dseg] 0x000060 0x000187      0     39     39    1024   3.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 12 warnings
