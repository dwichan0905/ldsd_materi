;//final project stopw
;//kelompok 13
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#include <stdlib.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;char tampung[16];   //array tempat kita memunculkan kata2 pada LCD
;int ms1,ms2,s1,s2,m1,m2;  //variabel parameter waktu milidetik, detik dan menit
;int p,r;            //variabel state untuk pause dan reset
;
;
;// Exstenal interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0013 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0014 //pleace your code here
; 0000 0015     p = p + 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0016     r = 0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0017 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;// Eksternal Interrupt 1 service rouine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 001B {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001C //place your code here
; 0000 001D     r = 1;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001E }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;
;// Declare your global vriables here
;
;void main(void)
; 0000 0023 {
;PCODE: $0000001E VOL: 0
; 0000 0024 
; 0000 0025 PORTA=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0026 DDRA=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0027 
; 0000 0028 
; 0000 0029 PORTB=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002A DDRB=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002B 
; 0000 002C 
; 0000 002D PORTC=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002E DDRC=0xFF;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 002F 
; 0000 0030 
; 0000 0031 PORTD=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0032 DDRD=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0033 
; 0000 0034 
; 0000 0035 TCCR0=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0036 TCNT0=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0037 OCR0=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0038 
; 0000 0039 
; 0000 003A TCCR1A=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 003B TCCR1B=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 003C TCNT1H=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003D TCNT1L=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003E ICR1H=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003F ICR1L=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0040 OCR1AH=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0041 OCR1AL=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0042 OCR1BH=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0043 OCR1BL=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0044 
; 0000 0045 
; 0000 0046 ASSR=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0047 TCCR2=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0048 TCNT2=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0049 OCR2=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 004A 
; 0000 004B 
; 0000 004C GICR|=0xC0;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 004D MCUCR=0x0A;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 004E MCUCSR=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 004F GIFR=0xC0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0050 
; 0000 0051 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0052 TIMSK=0x00;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0053 
; 0000 0054 
; 0000 0055 UCSRB=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0056 
; 0000 0057 
; 0000 0058 ACSR=0x80;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0059 SFIOR=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 005A ADCSRA=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 005B 
; 0000 005C 
; 0000 005D SPCR=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 005E 
; 0000 005F 
; 0000 0060 TWCR=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0061 
; 0000 0062 
; 0000 0063 lcd_init(16);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0064 
; 0000 0065 //Global enable interrupts
; 0000 0066 #asm("sei")
;PCODE: $0000006A VOL: 0
	sei
;PCODE: $0000006B VOL: 0
; 0000 0067 
; 0000 0068 while (1)
;PCODE: $0000006C VOL: 0
; 0000 0069       {
; 0000 006A      //place your code here
; 0000 006B       delay_ms (4);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 006C       if (r == 0)
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 006D       { ms1 = ms1;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 006E        if (p == 0)
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 006F        {
; 0000 0070        ms1 = ms1;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0071        }
; 0000 0072        else if (p == 1)
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0073        {
; 0000 0074        ms1 = ms1 + 1;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0075        }
; 0000 0076        else if (p == 2)
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0077        {
; 0000 0078         p = 0;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0079        }
; 0000 007A        }
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 007B       else if (r == 1)
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 007C       {
; 0000 007D        ms1 = 0; ms2 = 0; s1 = 0; s2 = 0; m1 = 0; m2 = 0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 007E       }
; 0000 007F        if (ms1 == 10)
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0080       {
; 0000 0081            ms1 = 0;
;PCODE: $0000009D VOL: 0
; 0000 0082            ms2 = ms2 + 1;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0083       }
; 0000 0084       if (ms2 == 6)
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0085       {
; 0000 0086            ms2 = 0;
;PCODE: $000000A5 VOL: 0
; 0000 0087            s1 = s1 + 1;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0088       }
; 0000 0089       if (s1 == 10);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 008A       {
;PCODE: $000000AD VOL: 0
; 0000 008B           s1 = 0;
;PCODE: $000000AE VOL: 0
; 0000 008C           s2 = s2 + 1;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 008D       }
; 0000 008E       if (s2 == 6)
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 008F       {
; 0000 0090           s2 = 0;
;PCODE: $000000B5 VOL: 0
; 0000 0091           m1 = m1 + 1;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0092       }
; 0000 0093       if (m1 == 10)
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0094       {
; 0000 0095           m1 = 0;
;PCODE: $000000BD VOL: 0
; 0000 0096           m2 = m2 + 1;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0097       }
; 0000 0098 
; 0000 0099       lcd_gotoxy(0,0);  //menampilkan data di kolom 0 baris ke-0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 009A       lcd_puts("stopw");
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 009B 
; 0000 009C       sprintf(tampung,"%i%i : %i%i : %i%i ",m2,m1,s2,s1,ms2,ms1 ); //simpan data integer kearray tampung(16)
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 009D       lcd_gotoxy(0,1);   //menampilkan data di kolom 0 bais ke-2
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 009E       lcd_puts(tampung); //menampilkan array tampung bertype char
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 009F      }
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00A0 }
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0

	.DSEG
_0x13:
	.BYTE 0x6
;
;
